
;; class-tree
;(gameobject (bullet enemy-bullet penetrate 
;                    bomb axe boomerang ...)
;	    (gamecharacter (enemy ...)
;			   player)
;	    (wall move-wall damage-wall 
;		  (break-wall easy-break-wall)
;		  ...)
;	    item
;	    switch)

(def () gameobject (newcoord))
(def () bullet (newcoord (gameobject)))
(def () enemy-bullet (newcoord (bullet)))
(def () penetrate (newcoord (bullet)))
(def () bomb (newcoord (bullet)))
(def () axe (newcoord (bullet)))
(def () boomerang (newcoord (bullet)))
(def () gamecharacter (newcoord (gameobject)))
(def () enemy (newcoord (gamecharacter)))
(def () player (newcoord (gamecharacter)))
(def () wall (newcoord (gameobject)))
(def () move-wall (newcoord (wall)))
(def () damage-wall (newcoord (wall)))
(def () break-wall (newcoord (wall)))
(def () easy-break-wall (newcoord (break-wall)))
(def () active-wall (newcoord (wall)))
(def () inactive-wall (newcoord (wall)))
(def () locked-wall (newcoord (wall)))
(def () item (newcoord (gameobject)))
(def () switch (newcoord (gameobject)))


(method () collide ((obj-a (gameobject)) (obj-b (gameobject)))
	(print "gameobject AND gameobject"))
(method () collide ((chr (gamecharacter)) (chip (wall)))
	(print "gamecharacter AND wall")
	(proceed))
(method () collide ((chr (gamecharacter)) (chip (move-wall)))
	(print "gamecharacter AND move-wall")
	(proceed))
(method () collide ((ply (player)) (enem (enemy)))
	(print "player AND enemy")
	(proceed))
(method () collide ((ply (player)) (ebul (enemy-bullet)))
	(print "player AND enemy-bullet")
	(proceed))
(method () collide ((e (enemy)) (ebul (enemy-bullet)))
	(print "enemy AND enemy-bullet")
	(proceed))
(method () collide ((wall (damage-wall)) (player (player)))
	(print "damage-wall AND player")
	(proceed))
(method () collide ((wall (break-wall)) (bullet (bullet)))
	(print "break-wall AND bullet")
	(proceed))
(method () collide ((wall (break-wall)) (bullet (penetrate)))
	(print "break-wall ANDpenetrate")
	(proceed))
(method () collide ((wall (easy-break-wall)) (player (player)))
	(print "easy-break-wall AND player")
	(proceed))
(method () collide ((ebul (enemy-bullet)) (chip (wall)))
	(print "enemy-bullet AND wall")
	(proceed))
(method () collide ((bul (bullet)) (chip (wall)))
	(print "bullet AND wall")
	(proceed))
(method () collide ((enem (enemy)) (bul (bullet)))
	(print "enemy AND bullet")
	(proceed))
(method () collide ((bul (penetrate)) (chip (wall)))
	(print "penetrate AND wall")
	(proceed))
(method () collide ((bul (bomb)) (chip (wall)))
	(print "bomb AND wall")
	(proceed))
(method () collide ((enem (enemy)) (bul (bomb)))
	(print "enemy AND bomb")
	(proceed))
(method () collide ((bul (axe)) (chip (wall)))
	(print "axe AND wall")
	(proceed))
(method () collide ((bul (boomerang)) (chip (wall)))
	(print "boomerang AND wall")
	(proceed))
(method () collide ((bul (boomerang)) (ply (player)))
	(print "boomerang AND player")
	(proceed))
(method () collide ((item (item)) (p (player)))
	(print "item AND player")
	(proceed))
(method () collide ((switch (switch)) (bul (bullet)))
	(print "switch AND bullet")
	(proceed))
(method () collide ((obj (gameobject)) (wall (active-wall)))
	(print "gameobject AND active-wall")
	(proceed))
(method () collide ((obj (gameobject)) (wall (inactive-wall)))
	(print "gameobject AND inactive-wall")
	(proceed))
(method () collide ((player (player)) (wall (locked-wall)))
	(print "player AND locked-wall")
	(proceed))

(method () collide ((chip (wall)) (chr (gamecharacter)))
	(print "wall AND gamecharacter")
	(proceed))
(method () collide ((chip (move-wall)) (chr (gamecharacter)))
	(print "move-wall AND gamecharacter") 
	(proceed))
(method () collide ((enem (enemy)) (ply (player))) 
	(print "enemy AND player")
	(proceed))
(method () collide ((ebul (enemy-bullet)) (ply (player)))
	(print "enemy-bullet AND player")
	(proceed))
(method () collide ((ebul (enemy-bullet)) (e (enemy)))
	(print "enemy-bullet AND enemy")
	(proceed))
(method () collide ((player (player)) (wall (damage-wall)))
	(print "player AND damage-wall") 
	(proceed))
(method () collide ((bullet (bullet)) (wall (break-wall)))
	(print "bullet AND break-wall") 
	(proceed))
(method () collide ((bullet (penetrate)) (wall (break-wall)))
	(print "penetrate AND break-wall")
	(proceed))
(method () collide ((player (player)) (wall (easy-break-wall)))
	(print "player AND easy-break-wall") 
	(proceed))
(method () collide ((chip (wall)) (ebul (enemy-bullet)))
	(print "wall AND enemy-bullet") 
	(proceed))
(method () collide ((chip (wall)) (bul (bullet))) 
	(print "wall AND bullet")
	(proceed))
(method () collide ((bul (bullet)) (enem (enemy))) 
	(print "bullet AND enemy")
	(proceed))
(method () collide ((chip (wall)) (bul (penetrate)))
	(print "wall AND penetrate") 
	(proceed))
(method () collide ((chip (wall)) (bul (bomb))) 
	(print "wall AND bomb")
	(proceed))
(method () collide ((bul (bomb)) (enem (enemy))) 
	(print "bomb AND enemy")
	(proceed))
(method () collide ((chip (wall)) (bul (axe))) 
	(print "wall AND axe")
	(proceed))
(method () collide ((chip (wall)) (bul (boomerang)))
	(print "wall AND boomerang") 
	(proceed))
(method () collide ((ply (player)) (bul (boomerang)))
	(print "player AND boomerang") 
	(proceed))
(method () collide ((p (player)) (item (item))) 
	(print "player AND item")
	(proceed))
(method () collide ((bul (bullet)) (switch (switch)))
	(print "bullet AND switch")
	(proceed))
(method () collide ((wall (active-wall)) (obj (gameobject)))
	(print "gameobject AND active-wall")
	(proceed))
(method () collide ((wall (inactive-wall)) (obj (gameobject)))
	(print "inactive-wall AND gameobject") 
	(proceed))
(method () collide ((wall (locked-wall)) (player (player)))
	(print "player AND locked-wall") 
	(proceed))


#|
これプラス引数の順番を入れ替えたものが定義されている。

例えば
(method () collide ((ply player) (enem enemy)))
(method () collide ((ebul enemy-bullet) (chip wall)))
の優先順位は？

* 確実に順序付けできないので、妥協策を探す
* 実際にディスパッチするときは比較対象に並ぶ心配がない（？）ので、ディスパッチ後のソートにする

* CLOSの実装を勘違いしていた
** 予めメソッドをソートしておくのではない
** 名前毎にメソッドのリストを作っておく
** -> 呼び出しがあったら、その呼び出しに適合するメソッドのみを取り出す
** -> sortして先頭から呼び出す

* ↑にしたがって作る
** 
(method () collide gameobject gameobject)
(method () collide gamecharacter wall)
(method () collide gamecharacter move-wall)
(method () collide player enemy)
(method () collide player enemy-bullet)
(method () collide enemy enemy-bullet)
(method () collide damage-wall player)
(method () collide break-wall bullet)
(method () collide break-wall penetrate)
(method () collide easy-break-wall player)
(method () collide enemy-bullet wall)
(method () collide bullet wall)
(method () collide enemy bullet)
(method () collide penetrate wall)
(method () collide bomb wall)
(method () collide enemy bomb)
(method () collide axe wall)
(method () collide boomerang wall)
(method () collide boomerang player)
(method () collide item player)
(method () collide switch bullet)
(method () collide gameobject active-wall)
(method () collide gameobject inactive-wall)
(method () collide player locked-wall)
|#

